<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Colors-->

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="HighlightCopyPreviousBrush" Color="#adeeaa"/>
    <SolidColorBrush x:Key="GlowCopyPreviousBrush" Color="#C8FBC8" /> 
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="LightGreen" />

    <!-- CopyPreviousButtonStyle -->
    <Style x:Key="CopyPreviousButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource BorderBrushCommonNormal}"
                                BorderThickness="2" 
                                SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Focusable="False" 
                                              HorizontalAlignment="Center" 
                                              Margin="5" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <!-- IsFocused without Mouseover-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource GlowCopyPreviousBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrushCommonHighlight}"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="{DynamicResource BorderThicknessCommonHighlight}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Mouseover without focus-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightCopyPreviousBrush}"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="{DynamicResource BorderThicknessCommonHighlight}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- IsFocused and Mouseover-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightCopyPreviousBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrushCommonHighlight}"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="{DynamicResource BorderThicknessCommonHighlight}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPressedBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="{DynamicResource BorderThicknessCommonHighlight}"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>