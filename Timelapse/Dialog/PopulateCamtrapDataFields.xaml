<controls:BusyableDialogWindow x:Class="Timelapse.Dialog.PopulateCamtrapDataFields"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Timelapse.Controls"
        mc:Ignorable="d"
        Title="PopulateCamtrap data fields information" 
        MinHeight="750" MinWidth="760"
        Height="750" Width="760"
        ResizeMode="CanResizeWithGrip"
		ShowInTaskbar="False"
		WindowStartupLocation="CenterOwner" BorderBrush="Black" Loaded="Window_Loaded" Closing="Window_Closing">
    <Grid>
        <DockPanel Grid.Row="0">
            <controls:FormattedMessageContent x:Name="Message" DockPanel.Dock="Top"
                            Icon="{x:Static controls:DialogIconType.Question}"
                            DialogTitle="Populate Fields with CamtrapDP data"
                            What="Timelapse can automatically populate various CamtrapDP data fields that would otherwise be tedious to do.
                                  [br]This should be done before exporting your CamtrapDP data as a csv file, as otherwise some fields would be empty." 
                            Solution="[ni] Select the option that best reflects how you normally fill in data for your images.
                                      [ni] Click the [e]Populate[/e] button to automatically poplulate various fields."
                            Result="The data fields listed in [e]Details[/e] will be over-written for each file in your current selection"
                            Hint="[i]CamtrapDP[/i] defines how [i]events[/i] vs. [i]observations[/i] are treated, and how they should appear in the generated [i].csv[/i] files. 
                                  [br 14]In Timelapse, files within an event are those files within a single [b]Episode[/b]: see [link:{x:Static constant:ExternalLinks.TimelapseGuideReference}|Timelapse Reference Guide:Episodes]"
                            Details="IDs are populated as [link:https://en.wikipedia.org/wiki/Universally_unique_identifier|Universally Unique Identifiers] (aka [i]UUID[/i]s or [i]GUID[/i]s).
                                     [br 14]
                                     [b]These fields will be populated based on current values:[/b][br]
                                     [li][e]fileName[/e]: the name of the file (same as File)  
                                     [li][e]filePath[/e]: the relative path to the file (combines RelativePath/File)  
                                     [li][e]deploymentID[/e]: ID of the deployment that contains the media. 
                                     [li][e]eventID[/e]: ID of the event the observation belongs to. An event defines a time-related series of media files determined using Timelapse's concept of an [e]episode[/e]. See [link:{x:Static constant:ExternalLinks.TimelapseGuideReference}|Timelapse Reference Guide:Episodes]
                                     [li][e]observationLevel[/e] for each image or video will depend upon how you tag your images: [i]media[/i] if you fill in every image, [i]event[/i] if you only fill in representative images.
                                     [li][e]eventStart[/e] and [e]eventEnd[/e] depends upon how you tag your images: [i]start/end of the media[/i] if you fill in every image, [i]start/end of the event[/i] if you only fill in representative images.
                                     [li][e]timestamp[/e] is set to the file's current Date/Time, which should be the time the file was created.
                                     [br 10]Exporting to a CSV file is done via [e]File|Export or import data to a CSV file | Export all data as CamtrapDP files[/e]."
                                              
                            ShowExplanationVisibility="True" />
            <StackPanel Orientation="Vertical" DockPanel.Dock="Top" VerticalAlignment="Stretch" Margin="10">
                <Rectangle Fill="#FF868686" Height="2" Margin="0,0,0,10"/>
                <TextBlock Name="PrimaryPanel1a" VerticalAlignment="Center" Margin="10,5,15,10">
                    <Run Text="Events are defined by media files whose Date/Time is separated by at most" />
                    <Run FontWeight="Bold" Name="RunCurrentSettings"/>
                    <Run Name="RunCurrentSettingsLabel" Text=""/>.
                </TextBlock>
                <GroupBox Name="PrimaryPanel1b">
                    <GroupBox.Header>
                        <Span FontWeight="Bold">How fields are populated partially depends upon how you tag your images.</Span>
                    </GroupBox.Header>
                    <StackPanel  Orientation="Vertical">
                        <TextBlock Margin="0,5,0,0" Text="When images are in an episode (i.e., an event comprising a series of images), my strategy is:"/>
                        <RadioButton GroupName="EventManagement" Name="RBTagEveryImage" Margin="10,5,0,0" IsChecked="True">
                            <TextBlock>
                                 <Run FontWeight="DemiBold" Text="Fill in observations for every single image"/>
                                 <Run Text="even if they are the same."/>
                                 <LineBreak/>
                                 <Run Text="e.g., If every image in an event contains the same Deer, I fill in 'Deer' for every image."/>
                            </TextBlock>
                        </RadioButton>
                        <RadioButton GroupName="EventManagement" Name="RBTagOnyRepresentativeImage" Margin="10,10,0,0">
                            <TextBlock>
                                <Run FontWeight="DemiBold" Text="Fill in observations for only images whose contents differ"/>
                                <Run Text=" in a meaningful way."/>
                                <LineBreak/>
                                <Run Text="e.g., If every image in an event contains the same Deer, I fill in 'Deer' for only one of those images."/>
                                <LineBreak/>
                                <Run Text="       If another image differs significantly (e.g., a 2nd deer appears), I fill in a second image to indicate"/>
                                <LineBreak/>
                                <Run Text="       observing two deer in this event."/>
                        </TextBlock>
                        </RadioButton>

                    </StackPanel>
                </GroupBox>
                <StackPanel Name="FeedbackPanel" Orientation="Vertical" Visibility="Collapsed">
                    <TextBlock Name="TextBlockFeedbackLine1" Text="Done." VerticalAlignment="Center" Margin="0,5,15,5" FontWeight="Bold" />
                    <TextBlock Name="TextBlockFeedbackLine2" Text="Done." VerticalAlignment="Center" Margin="0,5,0,5" FontWeight="Bold" />
                </StackPanel>
            </StackPanel>

            <DockPanel LastChildFill="True" >
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="CancelButton" IsCancel="True" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Padding="10" Margin="10,10,10,10" Click="CancelButton_Click">_Cancel</Button>
                    <Button x:Name="StartDoneButton" IsDefault="True" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Padding="10" Margin="10,10,10,10"  IsEnabled="True" Click="Start_Click">_Populate</Button>
                </StackPanel>
            </DockPanel>
        </DockPanel>
        <controls:BusyCancelIndicator x:Name="BusyCancelIndicator" IsBusy="False" Grid.Row="0" CancelClick="CancelAsyncOperationButton_Click"/>
    </Grid>
</controls:BusyableDialogWindow>