<?xml version="1.0" encoding="utf-8"?>
<!--
Master publish profile that orchestrates all Timelapse publishing operations.

IMPORTANT: Visual Studio's Publish button doesn't properly trigger custom MSBuild targets.
Instead, run this profile using one of these methods:

Method 1 - Command line (recommended):
  dotnet publish -p:PublishProfile=PublishAll

Method 2 - Run PowerShell script directly:
  powershell -ExecutionPolicy Bypass -File "Properties\PublishProfiles\PublishAll.ps1"

Method 3 - Add as External Tool in Visual Studio:
  Tools > External Tools > Add
  Title: Publish All
  Command: powershell.exe
  Arguments: -ExecutionPolicy Bypass -NoProfile -File "$(ProjectDir)Properties\PublishProfiles\PublishAll.ps1"
  Initial directory: $(ProjectDir)

The script executes the following steps in order:
1. Publishes RequiresDotNet8-win-x64 build
2. Publishes SelfContained-win-x64 build
3. Builds the zip distribution package
4. Builds the PerMachine MSI installer
5. Builds the PerUser MSI installer
-->
<Project>
  <PropertyGroup>
    <PublishProtocol>FileSystem</PublishProtocol>
    <Configuration>Release</Configuration>
    <TargetFramework>net8.0-windows</TargetFramework>
    <PublishDir>bin\Publish\PublishAll-Temp</PublishDir>
    <IsPublishable>false</IsPublishable>
  </PropertyGroup>
</Project>
