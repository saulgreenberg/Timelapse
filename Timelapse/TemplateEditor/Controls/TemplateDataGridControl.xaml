    <!--Note that the d editorCode is used to tell the designer to igrore the editorCode namespace entirely at design time.
    I did this as there were multiple design time errors that are not important. 
    To see them, just remove editorCode-->
    <UserControl x:Class="TimelapseTemplateEditor.Controls.TemplateDataGridControl"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                 xmlns:timelapseTemplateEditor2="clr-namespace:TimelapseTemplateEditor"
                 xmlns:dataTables="clr-namespace:Timelapse.DataTables"
                 xmlns:editorCode="clr-namespace:TimelapseTemplateEditor.EditorCode"
                 xmlns:controlsDataEntry="clr-namespace:Timelapse.ControlsDataEntry"
                 mc:Ignorable="d editorCode" 
                 d:DesignHeight="250" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../ResourceDictionaries/TemplateDataGridResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <editorCode:CellTextBlockConverter x:Key="CellTextBlockConverter"
                                               d:IsDataSource="True"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <!-- The primary template data grid -->
       
        <DataGrid Name="DataGrid"  MinHeight="215" VerticalAlignment="Top"  Grid.Row="0" Grid.Column="0" RowHeight="25" 
                VirtualizingStackPanel.IsVirtualizing="False"
                AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                BeginningEdit="TemplateDataGrid_BeginningEdit"
                CellEditEnding="TemplateDataGrid_CellEditEnding"
                CurrentCellChanged="TemplateDataGrid_CurrentCellChanged" 
                PreviewKeyDown="TemplateDataGrid_PreviewKeyDown" 
                PreviewTextInput="TemplateDataGrid_PreviewTextInput" 
                LayoutUpdated="TemplateDataGrid_LayoutUpdated"  
                SelectionChanged="TemplateDataGrid_SelectionChanged" SelectionMode="Single" 
                ItemsSource="{Binding}"  
                KeyboardNavigation.TabNavigation="Cycle"
                GotFocus="DataGrid_OnGotFocus"
                LostFocus="DataGrid_OnLostFocus"
                Loaded="DataGrid_OnLoaded"
                
                ColumnHeaderStyle="{DynamicResource VerticalGridHeaderStyle}" 
                                            >
            <DataGrid.Resources>
                <Style x:Key="VerticalGridHeaderStyle" TargetType="DataGridColumnHeader">
                    <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
            </DataGrid.Resources>
            <!-- If you change the visible rows or header names, please check UpdateCellColors() constants to ensure they match new conventions -->
            <DataGrid.Columns >

                <!-- #region ID Column -->
                <DataGridTextColumn Header="ID" CanUserSort="False" Binding="{Binding Path=Id, Converter={StaticResource CellTextBlockConverter}}" IsReadOnly="True" />
                <!-- #endregion -->

                <!-- #region Control order Column -->
                <DataGridTextColumn Header="Control&#x0a;order" Binding="{Binding Path=ControlOrder, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" IsReadOnly="True"/>
                <!-- #endregion -->

                <!-- #region Spreadsheet order Column -->
                <DataGridTextColumn Header="Spreadsheet&#x0a;order" Binding="{Binding Path=SpreadsheetOrder, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" IsReadOnly="True"/>
                <!-- #endregion -->

                <!-- #region Type Column -->
                <DataGridTemplateColumn MinWidth="110" MaxWidth="110" Width="110"
                                        Header="Type" 
                                        CanUserSort="False" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="dataTables:ControlRow">
                            <ComboBox 
                                 Name="typeComboBox"
                                 Text="{Binding Path=Type, Converter={StaticResource CellTextBlockConverter}}"
                                 Tag="{Binding Path=ControlOrder}" 
                                 MinWidth="110"
                                 MaxWidth="110"
                                 HorizontalContentAlignment="Left"
                                 Margin="0,0,0,0" 
                                 Visibility="Visible"
                                 DropDownOpened ="TypeComboBoxDropDownOpened" 
                                 SelectionChanged="TypeComboBox_SelectionChanged"
                            >
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Style.Triggers>
                                            <!--Standard controls' tooltips are defined in code behind: since their comboboxes are disabled, nothing is triggered
                                                 However, we still have to incude them as otherwise their values won't show up 
                                                 (since Combobox text must match an item if it is to be displayed)-->
                                            <DataTrigger Binding="{Binding Type}" Value="Note">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeNoteToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Multiline">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeMultilineToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="AlphaNumeric">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeAlphaNumericToolTip}"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Type}" Value="Counter">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeCounterToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="IntegerAny">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeIntegerAnyToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="IntegerPositive">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeIntegerPositiveToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="DecimalAny">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeDecimalAnyToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="DecimalPositive">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeDecimalPositiveToolTip}"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeFixedChoiceToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="MultiChoice">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeMultiChoiceToolTip}"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Type}" Value="DateTime_">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeDateTime_ToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Date_">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeDate_ToolTip}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Time_">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeTime_ToolTip}"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Type}" Value="Flag">
                                                <Setter Property="ToolTip" Value="{StaticResource TypeFlagToolTip}"/>
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                                <ComboBoxItem Content="File" Visibility="Collapsed"/>
                                <ComboBoxItem Content="RelativePath" Visibility="Collapsed" />
                                <ComboBoxItem Content="DateTime" Visibility="Collapsed" />
                                <ComboBoxItem Content="DeleteFlag" Visibility="Collapsed" />
                                
                                <ComboBoxItem Content="Note"/>
                                <ComboBoxItem Content="MultiLine"/>
                                <ComboBoxItem Content="AlphaNumeric"/>
                                
                                <ComboBoxItem Content="Counter"/>
                                <ComboBoxItem Content="IntegerAny"/>
                                <ComboBoxItem Content="IntegerPositive"/>
                                <ComboBoxItem Content="DecimalAny"/>
                                <ComboBoxItem Content="DecimalPositive"/>
                                
                                <ComboBoxItem Content="FixedChoice"/>
                                <ComboBoxItem Content="MultiChoice"/>
                                
                                <ComboBoxItem Content="DateTime_"/>
                                <ComboBoxItem Content="Date_"/>
                                <ComboBoxItem Content="Time_"/>

                                <ComboBoxItem Content="Flag"/>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- #endregion -->

                <!-- #region Default Value Column -->
                <DataGridTextColumn MinWidth="100" Width="100" 
                    Header="Default Value" Binding="{Binding Path=DefaultValue, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTip" Value="{StaticResource DefaultValueToolTip}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="Counter">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="IntegerAny">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="IntegerPositive">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="DecimalAny">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="DecimalPositive">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- #endregion -->

                <!-- #region Label Column -->
                <DataGridTextColumn MinWidth="100"  Header="Label" Binding="{Binding Path=Label, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTip" Value="{StaticResource LabelToolTip}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- #endregion -->

                <!-- #region Data Label Column -->
                <DataGridTextColumn MinWidth="100"   Header="Data Label"  Binding="{Binding Path=DataLabel,  Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTip" Value="{StaticResource DataLabelToolTip}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- #endregion -->

                <!-- #region Tooltip Column -->
                <DataGridTemplateColumn MinWidth="50" Width="*" 
                                       Header="Tooltip" 
                                       CanUserSort="False" 
                                       IsReadOnly="True"
                                       >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="dataTables:ControlRow">
                            <StackPanel>
                                <Button Name="btnEditTooltipButton"  
                                        HorizontalContentAlignment="Left"
                                        Background="White"
                                        BorderThickness ="0"
                                        
                                        Content="{Binding Path=Tooltip}" 
                                        Margin="0"
                                        Padding="3,1,3,1"  
                                        Tag="{Binding Path=ControlOrder}" 
                                        Visibility="Visible"
                                        ToolTip="{StaticResource TooltipToolTip}"
                                        Click="EditTooltipButton_Click" >
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- #endregion -->

                <!--#region List Column -->
                <DataGridTemplateColumn MinWidth="70" MaxWidth="70" Width="70"
                                        Header="List" CanUserSort="False" IsReadOnly="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="dataTables:ControlRow">
                            <StackPanel>
                                <Button Name="btnButton"  
                                        Content="Define List" 
                                        Margin="3,1,3,1"  
                                        Tag="{Binding Path=ControlOrder}" 
                                        Visibility="Hidden"
                                        ToolTip="{StaticResource ListFixedChoiceToolTip}"
                                        timelapseTemplateEditor2:TemplateEditorWindowExtensions.ChoiceList="{Binding Path=List, Mode=TwoWay}" 
                                        Click="ChoiceListButton_Click" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <!--This doesn't work - so its hardcoded in LayoutUpdated-->
                                                <DataTrigger Binding="{Binding Type}" Value="FixedChoice">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="MultiChoice">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion -->

                <!--#region Width Column -->
                <DataGridTextColumn MinWidth="45" Width="45" MaxWidth="45"  Header="Width" Binding="{Binding Path=TXTBOXWIDTH, Converter={StaticResource CellTextBlockConverter}}" CanUserSort="False" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTip" Value="{StaticResource WidthToolTip}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--#endregion -->

                <!--#region Copyable Column -->
                <DataGridTemplateColumn  MinWidth="65" MaxWidth="65" Width="65" Header="Copyable" SortMemberPath="Include" CanUserSort="False" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type controlsDataEntry:DataEntryControl}">
                            <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Copyable, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="ToolTip" Value="{StaticResource CopyableToolTip}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
                <!--#endregion -->

                <!--#region Visible Column -->
                <DataGridTemplateColumn MinWidth="50" Width="50" MaxWidth="50" Header="Visible" SortMemberPath="Include" CanUserSort="False" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type dataTables:ControlRow}">
                            <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center"  IsChecked="{Binding Path=Visible, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="ToolTip" Value="{StaticResource VisibleToolTip}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
                <!--#endregion -->

                <!--#region ExportToCSV Column -->
                <DataGridTemplateColumn MinWidth="48" Width="48" MaxWidth="48" 
                                        Header="Export" SortMemberPath="Include" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type dataTables:ControlRow}">
                            <CheckBox Name="CheckBox" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=ExportToCSV, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="ToolTip" Value="{StaticResource ExportToCSVToolTip}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
                <!--#endregion -->

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
